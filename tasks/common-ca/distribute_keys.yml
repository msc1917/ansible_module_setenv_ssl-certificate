---
# If there are Problems with the local certificate files
# Should be commented out
# - name: Remove certificate-files from host
#   ansible.builtin.file:
#     path:      "{{ item }}"
#     state:     absent
#   become:      yes
#   with_items: 
#     - "/etc/ssl/certs/{{ ssl_certificate_authority.ca_definition.layer1.certificate_name }}.{{ ssl_certificate_authority.ssl_certificate.organizationName}}.pem"
#     - "/etc/ssl/private/{{ ssl_certificate_authority.ca_definition.layer3.local_filename }}.pem"
#     - "/etc/ssl/crt/{{ ssl_certificate_authority.ca_definition.layer3.local_filename }}.pem"
#     - "/usr/share/ca-certificates/extra"
#     - "/usr/local/share/ca-certificates/{{ ssl_certificate_authority.ca_definition.layer1.certificate_name }}.{{ ssl_certificate_authority.ssl_certificate.organizationName}}.pem"


# Distribute Keys to servers

- name: Fetch private key file from ca-server
  fetch: 
    src:       "{{ default_path.data_path }}/ssl-ca/{{ ssl_certificate_authority.ssl_certificate.organizationName }}/server/private/{{ ssl_certificate_authority.ca_definition.layer3.certificate_name }}.{{ inventory_hostname }}.pem"
    dest:      "/tmp/{{ ssl_certificate_authority.ca_definition.layer3.certificate_name }}.{{ inventory_hostname }}.pem"
    flat:      yes
  delegate_to: "{{ ssl_certificate_authority.ssl_ca_host }}"
  become:      yes
  when:        gen_server_certificate.changed

- name: Copy private key file to target-host
  copy: 
    src:       "/tmp/{{ ssl_certificate_authority.ca_definition.layer3.certificate_name }}.{{ inventory_hostname }}.pem"
    dest:      "/etc/ssl/private/{{ ssl_certificate_authority.ca_definition.layer3.local_filename }}.pem"
    owner:     "root"
    group:     "root"
    mode:      "444"
  become:      yes
  when:        gen_server_certificate.changed

- name: Remove private file from temp-directory
  ansible.builtin.file:
    path:      "/tmp/{{ ssl_certificate_authority.ca_definition.layer3.certificate_name }}.{{ inventory_hostname }}.pem"
    state:     absent
  delegate_to: "{{ ssl_certificate_authority.ssl_ca_host }}"
  become:      yes
  when:        gen_server_certificate.changed

- name: Fetch certificate file from ca-server
  fetch: 
    src:       "{{ default_path.data_path }}/ssl-ca/{{ ssl_certificate_authority.ssl_certificate.organizationName }}/server/certs/{{ item }}.pem"
    dest:      "/tmp/{{ item }}.pem"
    flat:      yes
  delegate_to: "{{ ssl_certificate_authority.ssl_ca_host }}"
  become:      yes
  with_items: 
    - "{{ ssl_certificate_authority.ca_definition.layer3.certificate_name }}.{{ inventory_hostname }}"
    - "{{ ssl_certificate_authority.ca_definition.layer3.certificate_name }}.{{ inventory_hostname }}.chained"
  when:        gen_server_certificate.changed

- name: Copy certificate file to target-host
  copy: 
    src:       "/tmp/{{ item.source }}"
    dest:      "/etc/ssl/crt/{{ item.target }}"
    owner:     "root"
    group:     "root"
    mode:      "444"
  become:      yes
  with_items: 
    - { source: "{{ ssl_certificate_authority.ca_definition.layer3.certificate_name }}.{{ inventory_hostname }}.pem",         target: "{{ ssl_certificate_authority.ca_definition.layer3.certificate_name }}.{{ inventory_hostname }}.crt" }
    - { source: "{{ ssl_certificate_authority.ca_definition.layer3.certificate_name }}.{{ inventory_hostname }}.pem",         target: "server.crt" }
    - { source: "{{ ssl_certificate_authority.ca_definition.layer3.certificate_name }}.{{ inventory_hostname }}.chained.pem", target: "{{ ssl_certificate_authority.ca_definition.layer3.certificate_name }}.{{ inventory_hostname }}.chained.crt" }
    - { source: "{{ ssl_certificate_authority.ca_definition.layer3.certificate_name }}.{{ inventory_hostname }}.chained.pem", target: "server.chained.crt" }
  when:        gen_server_certificate.changed

- name: Remove certificate key file from temp-directory
  ansible.builtin.file:
    path:      "/tmp/{{ item }}.pem"
    state:     absent
  delegate_to: "{{ ssl_certificate_authority.ssl_ca_host }}"
  become:      yes
  with_items: 
    - "{{ ssl_certificate_authority.ca_definition.layer3.certificate_name }}.{{ inventory_hostname }}"
    - "{{ ssl_certificate_authority.ca_definition.layer3.certificate_name }}.{{ inventory_hostname }}.chained"
  when:        gen_server_certificate.changed

# Distribute root-CA-Key

- name: Fetch root-certificate file from ca-server
  fetch: 
    src:       "{{ default_path.data_path }}/ssl-ca/{{ ssl_certificate_authority.ssl_certificate.organizationName }}/root-ca/certs/{{ item.name }}.{{ ssl_certificate_authority.ssl_certificate.organizationName}}.pem"
    dest:      "/tmp/{{ item.name }}.{{ ssl_certificate_authority.ssl_certificate.organizationName}}.pem"
    flat:      yes
  delegate_to: "{{ ssl_certificate_authority.ssl_ca_host }}"
  become:      yes
  run_once:    yes
  with_items: 
  - "{{ ssl_certificate_authority.ca_definition.layer1.certificate_name }}"
  when:        gen_server_certificate.changed

# - name: "Generate CA-Directories"
#   file:
#     path: "/usr/share/ca-certificates/extra"
#     owner: "root"
#     group: "root"
#     state: directory
#     mode: "755"
#   become: yes

- name: Copy root-certificate file to target-host
  copy: 
    src:       "/tmp/{{ item.name }}.{{ ssl_certificate_authority.ssl_certificate.organizationName}}.pem"
    dest:      "/usr/local/share/ca-certificates/{{ item.name }}.{{ ssl_certificate_authority.ssl_certificate.organizationName}}.crt"
    owner:     "root"
    group:     "root"
    mode:      "777"
  become:      yes
  notify:      refresh certificates
  with_items: 
  - "{{ ssl_certificate_authority.ca_definition.layer1.certificate_name }}"
  when:        
    - gen_server_certificate.changed
    - ssl_certificates is defined
    - item.name in ssl_certificates

- name: Remove root-certificate key file from temp-directory
  ansible.builtin.file:
    path:      "/tmp/{{ item.name }}.{{ ssl_certificate_authority.ssl_certificate.organizationName}}.pem"
    state:     absent
  delegate_to: "{{ ssl_certificate_authority.ssl_ca_host }}"
  become:      yes
  run_once:    yes
  with_items: 
  - "{{ ssl_certificate_authority.ca_definition.layer1.certificate_name }}"
  when:        gen_server_certificate.changed

- name: Fetch intermediate-certificates file from ca-server
  fetch: 
    src:       "{{ default_path.data_path }}/ssl-ca/{{ ssl_certificate_authority.ssl_certificate.organizationName }}/intermediate-ca/certs/{{ item.name }}.{{ ssl_certificate_authority.ssl_certificate.organizationName}}.pem"
    dest:      "/tmp/{{ item.name }}.pem"
    flat:      yes
  delegate_to: "{{ ssl_certificate_authority.ssl_ca_host }}"
  become:      yes
  run_once:    yes
  with_items:
    - "{{ ssl_certificate_authority.ca_definition.layer2.certificate_name }}"
  when:        gen_server_certificate.changed

- name: Copy intermediate-certificates file to target-host
  copy: 
    src:       "/tmp/{{ item.name }}.pem"
    dest:      "/etc/ssl/crt/{{ item.name }}.crt"
    owner:     "root"
    group:     "root"
    mode:      "444"
  become:      yes
  with_items:
    - "{{ ssl_certificate_authority.ca_definition.layer2.certificate_name }}"
  when:        gen_server_certificate.changed

- name: Copy intermediate-certificates file to target-host
  copy: 
    src:       "/tmp/{{ ssl_certificate_authority.master_intermediate_cert }}.pem"
    dest:      "/etc/ssl/crt/server-ca.crt"
    owner:     "root"
    group:     "root"
    mode:      "444"
  become:      yes
  when:        gen_server_certificate.changed

- name: Remove intermediate-certificates key file from temp-directory
  ansible.builtin.file:
    path:      "/tmp/{{ item.name }}.pem"
    state:     absent
  delegate_to: "{{ ssl_certificate_authority.ssl_ca_host }}"
  become:      yes
  run_once:    yes
  with_items:
    - "{{ ssl_certificate_authority.ca_definition.layer2.certificate_name }}"
  when:        gen_server_certificate.changed



# - name: Update CA Trust
#   command: "update-ca-certificates extract"
#   become:  true
#   when:    gen_server_certificate.changed