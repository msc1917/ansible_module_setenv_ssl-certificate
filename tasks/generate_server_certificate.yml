---
# Debug-Output for the mapping-tables

# - name: List global table ssl_mac_address_list
#   ansible.builtin.debug: 
#     var: hostvars[ssl_certificate_authority.ssl_ca_host]['ssl_mac_address_list']

# - name: List global table ssl_dev_name_to_ip_address_list
#   ansible.builtin.debug: 
#     var: hostvars[ssl_certificate_authority.ssl_ca_host]['ssl_dev_name_to_ip_address_list']

# - name: List global table ssl_dev_name_to_domainname_list
#   ansible.builtin.debug: 
#     var: hostvars[ssl_certificate_authority.ssl_ca_host]['ssl_dev_name_to_domainname_list']


- name: Set actual devicename, ip-addresses and domains
  ansible.builtin.set_fact:
    act_dev_name: "{{ hostvars[ssl_certificate_authority.ssl_ca_host]['ssl_mac_address_list'][ansible_facts['default_ipv4']['macaddress']] }}"
    act_ip_address: "{{ hostvars[ssl_certificate_authority.ssl_ca_host]['ssl_dev_name_to_ip_address_list'][hostvars[ssl_certificate_authority.ssl_ca_host]['ssl_mac_address_list'][ansible_facts['default_ipv4']['macaddress']]] | unique | sort }}"
    act_dommain_list: "{{ hostvars[ssl_certificate_authority.ssl_ca_host]['ssl_dev_name_to_domainname_list'][hostvars[ssl_certificate_authority.ssl_ca_host]['ssl_mac_address_list'][ansible_facts['default_ipv4']['macaddress']]] | unique | sort }}"

- name: Add serveNet_ip and serveNet_domain if exists
  ansible.builtin.set_fact:
    act_ip_address: "{{ act_ip_address|default([]) + [serveNet_ip] | unique | sort }}"
    act_dommain_list: "{{ act_dommain_list|default([]) + [inventory_hostname_short.rstrip('.') + '.' + subnet.serveNet.domain_add.rstrip('.') + '.' + network.domain] | unique | sort }}"
  when:
    - serveNet_ip is defined


# Debug-Output f√ºr die Wertzuweisung

# - name: Show actual device-name
#   ansible.builtin.debug: 
#     var: act_dev_name

# - name: Show actual IP-adresses
#   ansible.builtin.debug: 
#     var: act_ip_address

# - name: Show actual domain-names
#   ansible.builtin.debug: 
#     var: act_dommain_list
